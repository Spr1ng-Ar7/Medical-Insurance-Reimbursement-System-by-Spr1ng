<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.neu.insurance.mapper.MedicalEquipmentMapper">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="org.neu.insurance.entity.MedicalEquipment">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="finance_category" property="financeCategory" jdbcType="VARCHAR"/>
        <result column="equipment_code" property="equipmentCode" jdbcType="VARCHAR"/>
        <result column="national_code" property="nationalCode" jdbcType="VARCHAR"/>
        <result column="equipment_name" property="equipmentName" jdbcType="VARCHAR"/>
        <result column="equipment_content" property="equipmentContent" jdbcType="VARCHAR"/>
        <result column="exclude_content" property="excludeContent" jdbcType="VARCHAR"/>
        <result column="unit_type" property="unitType" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
        <result column="category" property="category" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, finance_category, equipment_code, national_code, equipment_name, equipment_content,
        exclude_content, unit_type, price, category, status, create_time, update_time, create_by,
        update_by, remark
    </sql>

    <!-- 统计总数 -->
    <select id="count" resultType="long">
        SELECT COUNT(*) FROM medical_equipment
    </select>

    <!-- 分页查询（简单偏移量） -->
    <select id="selectPage" resultMap="BaseResultMap" parameterType="map">
        SELECT <include refid="Base_Column_List"/>
        FROM medical_equipment
        ORDER BY create_time DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 根据条件分页查询医疗器械列表 -->
    <select id="selectByCondition" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM medical_equipment
        <where>
            <if test="equipmentName != null and equipmentName != ''">
                AND equipment_name LIKE CONCAT('%', #{equipmentName}, '%')
            </if>
            <if test="equipmentCode != null and equipmentCode != ''">
                AND equipment_code = #{equipmentCode}
            </if>
            <if test="equipmentType != null and equipmentType != ''">
                AND equipment_type = #{equipmentType}
            </if>
            <if test="manufacturer != null and manufacturer != ''">
                AND manufacturer LIKE CONCAT('%', #{manufacturer}, '%')
            </if>
            <if test="insuranceCategory != null and insuranceCategory != ''">
                AND insurance_category = #{insuranceCategory}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
        ORDER BY create_time DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 根据条件统计医疗器械总数 -->
    <select id="countByCondition" resultType="int">
        SELECT COUNT(*)
        FROM medical_equipment
        <where>
            <if test="equipmentName != null and equipmentName != ''">
                AND equipment_name LIKE CONCAT('%', #{equipmentName}, '%')
            </if>
            <if test="equipmentCode != null and equipmentCode != ''">
                AND equipment_code = #{equipmentCode}
            </if>
            <if test="equipmentType != null and equipmentType != ''">
                AND equipment_type = #{equipmentType}
            </if>
            <if test="manufacturer != null and manufacturer != ''">
                AND manufacturer LIKE CONCAT('%', #{manufacturer}, '%')
            </if>
            <if test="insuranceCategory != null and insuranceCategory != ''">
                AND insurance_category = #{insuranceCategory}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <!-- 根据ID查询医疗器械 -->
    <select id="selectById" parameterType="long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM medical_equipment
        WHERE id = #{id}
    </select>

    <!-- 根据设备编码查询医疗器械 -->
    <select id="selectByEquipmentCode" parameterType="string" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM medical_equipment
        WHERE equipment_code = #{equipmentCode}
    </select>

    <!-- 根据国家编码查询医疗器械 -->
    <select id="selectByNationalCode" parameterType="string" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM medical_equipment
        WHERE national_code = #{nationalCode}
    </select>

    <!-- 新增医疗器械 -->
    <insert id="insert" parameterType="org.neu.insurance.entity.MedicalEquipment" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO medical_equipment (
            finance_category, equipment_code, national_code, equipment_name, equipment_content,
            exclude_content, unit_type, price, category, status, create_time, update_time, 
            create_by, update_by, remark
        ) VALUES (
            #{financeCategory}, #{equipmentCode}, #{nationalCode}, #{equipmentName}, #{equipmentContent},
            #{excludeContent}, #{unitType}, #{price}, #{category}, #{status}, NOW(), NOW(),
            #{createBy}, #{updateBy}, #{remark}
        )
    </insert>

    <!-- 更新医疗器械 -->
    <update id="update" parameterType="org.neu.insurance.entity.MedicalEquipment">
        UPDATE medical_equipment
        <set>
            <if test="financeCategory != null">finance_category = #{financeCategory},</if>
            <if test="equipmentCode != null">equipment_code = #{equipmentCode},</if>
            <if test="nationalCode != null">national_code = #{nationalCode},</if>
            <if test="equipmentName != null">equipment_name = #{equipmentName},</if>
            <if test="equipmentContent != null">equipment_content = #{equipmentContent},</if>
            <if test="excludeContent != null">exclude_content = #{excludeContent},</if>
            <if test="unitType != null">unit_type = #{unitType},</if>
            <if test="price != null">price = #{price},</if>
            <if test="category != null">category = #{category},</if>
            <if test="status != null">status = #{status},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除医疗器械 -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM medical_equipment WHERE id = #{id}
    </delete>

    <!-- 批量删除医疗器械 -->
    <delete id="batchDelete" parameterType="list">
        DELETE FROM medical_equipment WHERE id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 根据设备类型查询医疗器械列表 -->
    <select id="selectByEquipmentType" parameterType="string" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM medical_equipment
        WHERE equipment_type = #{equipmentType}
        ORDER BY create_time DESC
    </select>

    <!-- 根据医保分类查询医疗器械列表 -->
    <select id="selectByInsuranceCategory" parameterType="string" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM medical_equipment
        WHERE insurance_category = #{insuranceCategory}
        ORDER BY create_time DESC
    </select>

    <!-- 根据是否可报销查询医疗器械列表 -->
    <select id="selectByReimbursable" parameterType="int" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM medical_equipment
        WHERE reimbursable = #{reimbursable}
        ORDER BY create_time DESC
    </select>

    <!-- 根据价格范围查询医疗器械列表 -->
    <select id="selectByPriceRange" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM medical_equipment
        WHERE price BETWEEN #{minPrice} AND #{maxPrice}
        ORDER BY price ASC
    </select>

    <!-- 根据报销比例范围查询医疗器械列表 -->
    <select id="selectByReimbursementRatio" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM medical_equipment
        WHERE reimbursement_ratio BETWEEN #{minRatio} AND #{maxRatio}
        ORDER BY reimbursement_ratio DESC
    </select>

    <!-- 获取所有设备类型 -->
    <select id="selectAllEquipmentTypes" resultType="string">
        SELECT DISTINCT equipment_type 
        FROM medical_equipment 
        WHERE equipment_type IS NOT NULL AND equipment_type != ''
        ORDER BY equipment_type
    </select>

    <!-- 获取所有医保分类 -->
    <select id="selectAllInsuranceCategories" resultType="string">
        SELECT DISTINCT insurance_category 
        FROM medical_equipment 
        WHERE insurance_category IS NOT NULL AND insurance_category != ''
        ORDER BY insurance_category
    </select>

    <!-- 获取所有单位 -->
    <select id="selectAllUnits" resultType="string">
        SELECT DISTINCT unit 
        FROM medical_equipment 
        WHERE unit IS NOT NULL AND unit != ''
        ORDER BY unit
    </select>

    <!-- 检查设备编码是否存在 -->
    <select id="countByEquipmentCode" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM medical_equipment WHERE equipment_code = #{equipmentCode}
    </select>

    <!-- 检查国家编码是否存在 -->
    <select id="countByNationalCode" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM medical_equipment WHERE national_code = #{nationalCode}
    </select>

    <!-- 检查器械编码是否存在 -->
    <select id="existsByEquipmentCode" parameterType="string" resultType="boolean">
        SELECT COUNT(*) > 0 FROM medical_equipment WHERE equipment_code = #{equipmentCode}
    </select>

    <!-- 模糊搜索医疗器械名称 -->
    <select id="searchByName" parameterType="string" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM medical_equipment
        WHERE equipment_name LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY create_time DESC
    </select>

    <!-- 更新医疗器械状态 -->
    <update id="updateStatus">
        UPDATE medical_equipment 
        SET status = #{status}, update_time = NOW()
        WHERE id = #{id}
    </update>

</mapper> 