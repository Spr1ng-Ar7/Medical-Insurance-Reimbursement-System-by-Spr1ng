<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.neu.insurance.mapper.MenuMapper">

    <!-- 结果映射 -->
    <resultMap id="MenuResultMap" type="org.neu.insurance.entity.Menu">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="parent_id" property="parentId" jdbcType="BIGINT"/>
        <result column="menu_name" property="menuName" jdbcType="VARCHAR"/>
        <result column="menu_code" property="menuCode" jdbcType="VARCHAR"/>
        <result column="menu_path" property="menuPath" jdbcType="VARCHAR"/>
        <result column="component" property="component" jdbcType="VARCHAR"/>
        <result column="icon" property="icon" jdbcType="VARCHAR"/>
        <result column="order_num" property="orderNum" jdbcType="INTEGER"/>
        <result column="menu_type" property="menuType" jdbcType="VARCHAR"/>
        <result column="visible" property="visible" jdbcType="VARCHAR"/>
        <result column="perms" property="perms" jdbcType="VARCHAR"/>
        <result column="query" property="query" jdbcType="VARCHAR"/>
        <result column="is_frame" property="isFrame" jdbcType="VARCHAR"/>
        <result column="is_cache" property="isCache" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <collection property="children" ofType="org.neu.insurance.entity.Menu" select="selectByParentId" column="id"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, parent_id, menu_name, menu_code, menu_path, component, icon, order_num, 
        menu_type, visible, perms, query, is_frame, is_cache, status, 
        create_time, update_time, create_by, update_by, remark
    </sql>

    <!-- 根据ID查询菜单 -->
    <select id="selectById" resultMap="MenuResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM menu
        WHERE id = #{id}
    </select>

    <!-- 根据菜单编码查询菜单 -->
    <select id="selectByMenuCode" resultMap="MenuResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM menu
        WHERE menu_code = #{menuCode}
    </select>

    <!-- 分页查询菜单列表 -->
    <select id="selectPage" resultMap="MenuResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM menu
        ORDER BY order_num ASC, create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 查询菜单总数 -->
    <select id="count" resultType="long">
        SELECT COUNT(*)
        FROM menu
    </select>

    <!-- 查询所有菜单 -->
    <select id="selectAll" resultMap="MenuResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM menu
        ORDER BY order_num ASC, create_time DESC
    </select>

    <!-- 根据父菜单ID查询子菜单列表 -->
    <select id="selectByParentId" resultMap="MenuResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM menu
        WHERE parent_id = #{parentId}
        ORDER BY order_num ASC, create_time DESC
    </select>

    <!-- 根据用户ID获取用户权限菜单 -->
    <select id="selectUserMenus" resultMap="MenuResultMap">
        SELECT DISTINCT m.<include refid="Base_Column_List"/>
        FROM menu m
        INNER JOIN role_menu rm ON m.id = rm.menu_id
        INNER JOIN sys_admin_role ar ON rm.role_id = ar.role_id
        WHERE ar.admin_id = #{userId}
        AND m.status = '1'
        ORDER BY m.order_num ASC, m.create_time DESC
    </select>

    <!-- 根据角色ID获取角色权限菜单 -->
    <select id="selectRoleMenus" resultMap="MenuResultMap">
        SELECT m.<include refid="Base_Column_List"/>
        FROM menu m
        INNER JOIN role_menu rm ON m.id = rm.menu_id
        WHERE rm.role_id = #{roleId}
        ORDER BY m.order_num ASC, m.create_time DESC
    </select>

    <!-- 插入菜单 -->
    <insert id="insert" parameterType="org.neu.insurance.entity.Menu" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO menu (
            parent_id, menu_name, menu_code, menu_path, component, icon, order_num,
            menu_type, visible, perms, query, is_frame, is_cache, status,
            create_time, update_time, create_by, update_by, remark
        ) VALUES (
            #{parentId}, #{menuName}, #{menuCode}, #{menuPath}, #{component}, #{icon}, #{orderNum},
            #{menuType}, #{visible}, #{perms}, #{query}, #{isFrame}, #{isCache}, #{status},
            NOW(), NOW(), #{createBy}, #{updateBy}, #{remark}
        )
    </insert>

    <!-- 更新菜单信息 -->
    <update id="update" parameterType="org.neu.insurance.entity.Menu">
        UPDATE menu
        SET parent_id = #{parentId},
            menu_name = #{menuName},
            menu_code = #{menuCode},
            menu_path = #{menuPath},
            component = #{component},
            icon = #{icon},
            order_num = #{orderNum},
            menu_type = #{menuType},
            visible = #{visible},
            perms = #{perms},
            query = #{query},
            is_frame = #{isFrame},
            is_cache = #{isCache},
            status = #{status},
            update_time = NOW(),
            update_by = #{updateBy},
            remark = #{remark}
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除菜单 -->
    <delete id="deleteById">
        DELETE FROM menu WHERE id = #{id}
    </delete>

    <!-- 批量删除菜单 -->
    <delete id="batchDelete">
        DELETE FROM menu WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 更新菜单状态 -->
    <update id="updateStatus">
        UPDATE menu
        SET status = #{status},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 检查菜单编码是否存在 -->
    <select id="existsByMenuCode" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM menu
        WHERE menu_code = #{menuCode}
    </select>

    <!-- 检查菜单路径是否存在 -->
    <select id="existsByMenuPath" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM menu
        WHERE menu_path = #{menuPath}
    </select>

    <!-- 模糊搜索菜单名称 -->
    <select id="searchByName" resultMap="MenuResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM menu
        WHERE menu_name LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY order_num ASC, create_time DESC
    </select>

    <!-- 根据菜单类型查询菜单列表 -->
    <select id="selectByMenuType" resultMap="MenuResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM menu
        WHERE menu_type = #{menuType}
        ORDER BY order_num ASC, create_time DESC
    </select>

</mapper> 